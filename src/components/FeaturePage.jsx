import React from 'react';
import Slider from 'react-slick';
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import './FeaturePage.css';

const FeaturePage = () => {
  const slides = [
    {
      title: "GI·∫¢I PH√ÅP QU·∫¢N L√ù KHU VUI CH∆†I TH√îNG MINH",
      subtitle: "CtrlPark",
      website: "Website: invade.vn",
      hotline: "Hotline 24/7: 0899 023 368",
      type: "hero"
    },
    {
      title: "Ph√π h·ª£p h·∫ßu h·∫øt v·ªõi t·∫•t c·∫£ c√°c lo·∫°i h√¨nh vui ch∆°i",
      subtitle: "CtrlPark l√† m·ªôt gi·∫£i ph√°p c√¥ng ngh·ªá ti√™n ti·∫øn ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ t·ªëi ∆∞u h√≥a ho·∫°t ƒë·ªông qu·∫£n l√Ω t·∫°i c√°c khu vui ch∆°i gi·∫£i tr√≠, c√¥ng vi√™n, trung t√¢m th∆∞∆°ng m·∫°i, v√† c√°c ƒëi·ªÉm du l·ªãch. ƒê√¢y l√† m·ªôt n·ªÅn t·∫£ng gi√∫p ƒë∆°n gi·∫£n h√≥a quy tr√¨nh v·∫≠n h√†nh, n√¢ng cao tr·∫£i nghi·ªám kh√°ch h√†ng, v√† ƒë·∫£m b·∫£o hi·ªáu qu·∫£ kinh doanh v∆∞·ª£t tr·ªôi...",
      items: [
        {
          icon: "/icons/theme-park.png",
          text: "C√îNG VI√äN CH·ª¶ ƒê·ªÄ"
        },
        {
          icon: "/icons/water-park.png",
          text: "C√îNG VI√äN N∆Ø·ªöC"
        },
        {
          icon: "/icons/mall.png",
          text: "TRUNG T√ÇM GI·∫¢I TR√ç"
        },
        {
          icon: "/icons/temple.png",
          text: "DU L·ªäCH T√ÇM LINH"
        },
        {
          icon: "/icons/climbing.png",
          text: "T·ªî H·ª¢P T·∫ÆM KHO√ÅNG"
        }
      ],
      type: "business-types"
    },
    {
      title: "M√¥ h√¨nh t·ªïng quan h·ªá th·ªëng",
      type: "system-overview",
      components: {
        payments: [
          { icon: "/icons/payment/vnpay.png", name: "VNPay" },
          { icon: "/icons/payment/momo.png", name: "Momo" },
          { icon: "/icons/payment/zalopay.png", name: "ZaloPay" },
          { icon: "/icons/payment/onepay.png", name: "OnePay" }
        ],
        core: {
          Payment: { icon: "/icons/payment-box.png" },
          Center: { icon: "/icons/gear.png" },
          Ticket: { icon: "/icons/ticket-box.png" }
        },
        integrations: [
          { name: "Mobile App", icon: "/icons/mobile-app.png", color: "blue" },
          { name: "B2C/B2B", icon: "/icons/b2c.png", color: "red" },
          { name: "Social", icon: "/icons/social.png", color: "yellow" },
          { name: "OTAs, eCommerce", icon: "/icons/ecommerce.png", color: "orange" },
          { name: "Ticketcounter", icon: "/icons/ticket.png", color: "green" },
          { name: "Self Kiosk", icon: "/icons/kiosk.png", color: "purple" }
        ],
        controls: [
          { name: "Access Control", icon: "/icons/access.png" },
          { name: "Display", icon: "/icons/display.png" },
          { name: "Mobile Check", icon: "/icons/mobile-check.png" },
          { name: "Smart Lock", icon: "/icons/smart-lock.png" }
        ]
      }
    },
    {
      title: "Ch·ª©c nƒÉng h·ªá th·ªëng",
      type: "system-features",
      features: [
        {
          icon: "/icons/features/ticket.png",
          title: "Qu·∫£n l√Ω v√©",
          items: [
            "ƒê·∫∑t v√© tr·ª±c tuy·∫øn",
            "Qu·∫£n l√Ω ƒë∆°n h√†ng",
            "Ki·ªÉm so√°t v√© v√†o c·ªïng",
            "B√°o c√°o doanh thu"
          ]
        },
        {
          icon: "/icons/features/customer.png", 
          title: "Qu·∫£n l√Ω kh√°ch h√†ng",
          items: [
            "Th√¥ng tin kh√°ch h√†ng",
            "L·ªãch s·ª≠ giao d·ªãch",
            "Ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i",
            "ChƒÉm s√≥c kh√°ch h√†ng"
          ]
        },
        {
          icon: "/icons/features/report.png",
          title: "B√°o c√°o & Th·ªëng k√™",
          items: [
            "B√°o c√°o doanh thu",
            "Th·ªëng k√™ l∆∞·ª£t kh√°ch",
            "Ph√¢n t√≠ch xu h∆∞·ªõng",
            "D·ª± b√°o kinh doanh"
          ]
        },
        {
          icon: "/icons/features/settings.png",
          title: "C·∫•u h√¨nh h·ªá th·ªëng",
          items: [
            "Qu·∫£n l√Ω ng∆∞·ªùi d√πng",
            "Ph√¢n quy·ªÅn truy c·∫≠p",
            "C√†i ƒë·∫∑t thanh to√°n",
            "T√πy ch·ªânh giao di·ªán"
          ]
        }
      ]
    },
    {
      title: "M√¥ h√¨nh tri·ªÉn khai",
      type: "deployment-model",
      steps: [
        {
          icon: "/icons/requirement.png",
          title: "Kh·∫£o s√°t & Ph√¢n t√≠ch",
          description: "Kh·∫£o s√°t hi·ªán tr·∫°ng, ph√¢n t√≠ch y√™u c·∫ßu v√† ƒë·ªÅ xu·∫•t gi·∫£i ph√°p ph√π h·ª£p"
        },
        {
          icon: "/icons/design.png",
          title: "Thi·∫øt k·∫ø & T√πy bi·∫øn",
          description: "Thi·∫øt k·∫ø giao di·ªán, t√πy ch·ªânh t√≠nh nƒÉng theo y√™u c·∫ßu ƒë·∫∑c th√π"
        },
        {
          icon: "/icons/setup.png",
          title: "Tri·ªÉn khai & C√†i ƒë·∫∑t",
          description: "L·∫Øp ƒë·∫∑t thi·∫øt b·ªã, c√†i ƒë·∫∑t ph·∫ßn m·ªÅm v√† t√≠ch h·ª£p h·ªá th·ªëng"
        },
        {
          icon: "/icons/training.png",
          title: "ƒê√†o t·∫°o & B√†n giao",
          description: "ƒê√†o t·∫°o nh√¢n vi√™n v·∫≠n h√†nh, b√†n giao t√†i li·ªáu h∆∞·ªõng d·∫´n"
        }
      ],
      support: {
        title: "H·ªñ TR·ª¢ SAU TRI·ªÇN KHAI",
        items: [
          { icon: "üîß", text: "B·∫£o tr√¨ ƒë·ªãnh k·ª≥" },
          { icon: "üö®", text: "H·ªó tr·ª£ 24/7" },
          { icon: "‚ö°", text: "X·ª≠ l√Ω s·ª± c·ªë kh·∫©n c·∫•p" },
          { icon: "‚¨ÜÔ∏è", text: "N√¢ng c·∫•p h·ªá th·ªëng" }
        ]
      }
    }
  ];

  const settings = {
    dots: true,
    infinite: true,
    speed: 500,
    slidesToShow: 1,
    slidesToScroll: 1,
    arrows: true,
    adaptiveHeight: true,
    autoplay: false,
    pauseOnHover: true,
    customPaging: function(i) {
      return (
        <button aria-label={`Slide ${i + 1}`} />
      );
    }
  };

  const renderSlide = (slide) => {
    switch(slide.type) {
      case 'hero':
        return (
          <div className="hero-section slide hero-background">
            <div className="hero-content">
              <h1>{slide.title}</h1>
              <div className="logo-container">
                <img src="/logo192.png" alt="logo" className="logo" />
              </div>
              <h2>{slide.subtitle}</h2>
            </div>
            <div className="contact-info">
              <p>{slide.website}</p>
              <p>{slide.hotline}</p>
            </div>
          </div>
        );
      case 'business-types':
        return (
          <div className="business-types-slide slide">
            <h2>{slide.title}</h2>
            <p className="subtitle">{slide.subtitle}</p>
            <div className="business-types-grid">
              {slide.items.map((item, index) => (
                <div key={index} className="business-type-item">
                  <div className="business-type-icon">
                    <img src={item.icon} alt={item.text} />
                  </div>
                  <p>{item.text}</p>
                </div>
              ))}
            </div>
          </div>
        );
      case 'system-overview':
        return (
          <div className="system-overview-slide slide">
            <h2>{slide.title}</h2>
            <div className="system-diagram">
              {/* Payment Methods */}
              <div className="payment-box">
                <div className="payment-methods">
                  {slide.components.payments.map((payment, index) => (
                    <img key={index} src={payment.icon} alt={payment.name} />
                  ))}
                </div>
              </div>

              {/* Core System */}
              <div className="core-system">
                <div className="Payment-box">Payment</div>
                <div className="Center-box">
                  <img src={slide.components.core.Center.icon} alt="Center" />
                </div>
                <div className="Ticket-box">Ticket system</div>
              </div>

              {/* Integrations */}
              <div className="integrations">
                {slide.components.integrations.map((item, index) => (
                  <div key={index} className={`integration-item ${item.color}`}>
                    <img src={item.icon} alt={item.name} />
                    <span>{item.name}</span>
                  </div>
                ))}
              </div>

              {/* Control Systems */}
              <div className="control-systems">
                {slide.components.controls.map((control, index) => (
                  <div key={index} className="control-item">
                    <img src={control.icon} alt={control.name} />
                    <span>{control.name}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        );
      case 'deployment-model':
        return (
          <div className="deployment-slide slide">
            <h2>{slide.title}</h2>
            <div className="deployment-steps">
              {slide.steps.map((step, index) => (
                <div key={index} className="deployment-step">
                  <div className="step-icon">
                    <img src={step.icon} alt={step.title} />
                  </div>
                  <h3>{step.title}</h3>
                  <p>{step.description}</p>
                </div>
              ))}
            </div>
            <div className="support-section">
              <h3>{slide.support.title}</h3>
              <div className="support-items">
                {slide.support.items.map((item, index) => (
                  <div key={index} className="support-item">
                    <span className="support-icon">{item.icon}</span>
                    <span>{item.text}</span>
                  </div>
                ))}
              </div>
            </div>
          </div>
        );
      case 'system-features':
        return (
          <div className="system-features-slide slide">
            <h2>{slide.title}</h2>
            <div className="features-grid">
              {slide.features.map((feature, index) => (
                <div key={index} className="feature-card">
                  <div className="feature-icon">
                    <img src={feature.icon} alt={feature.title} />
                  </div>
                  <h3>{feature.title}</h3>
                  <ul className="feature-list">
                    {feature.items.map((item, idx) => (
                      <li key={idx}>{item}</li>
                    ))}
                  </ul>
                </div>
              ))}
            </div>
          </div>
        );
      default:
        return null;
    }
  };

  return (
    <div className="feature-page">
      <Slider {...settings}>
        {slides.map((slide, index) => (
          <div key={index}>
            {renderSlide(slide)}
          </div>
        ))}
      </Slider>
    </div>
  );
};

export default FeaturePage; 